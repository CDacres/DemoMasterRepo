<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zipcube/assets.proto

namespace App\Types;

use UnexpectedValueException;

/**
 * Protobuf type <code>zipcube.Currency</code>
 */
class Currency
{
    /**
     * Generated from protobuf enum <code>NOCURRENCY = 0;</code>
     */
    const NOCURRENCY = 0;
    /**
     * Generated from protobuf enum <code>GBP = 1;</code>
     */
    const GBP = 1;
    /**
     * Generated from protobuf enum <code>EUR = 2;</code>
     */
    const EUR = 2;
    /**
     * Generated from protobuf enum <code>USD = 3;</code>
     */
    const USD = 3;
    /**
     * Generated from protobuf enum <code>AMD = 4;</code>
     */
    const AMD = 4;
    /**
     * Generated from protobuf enum <code>BZD = 5;</code>
     */
    const BZD = 5;
    /**
     * Generated from protobuf enum <code>CAD = 6;</code>
     */
    const CAD = 6;
    /**
     * Generated from protobuf enum <code>CHF = 7;</code>
     */
    const CHF = 7;
    /**
     * Generated from protobuf enum <code>CNY = 8;</code>
     */
    const CNY = 8;
    /**
     * Generated from protobuf enum <code>IDR = 9;</code>
     */
    const IDR = 9;
    /**
     * Generated from protobuf enum <code>ILS = 10;</code>
     */
    const ILS = 10;
    /**
     * Generated from protobuf enum <code>INR = 11;</code>
     */
    const INR = 11;
    /**
     * Generated from protobuf enum <code>PKR = 12;</code>
     */
    const PKR = 12;
    /**
     * Generated from protobuf enum <code>PLN = 13;</code>
     */
    const PLN = 13;
    /**
     * Generated from protobuf enum <code>SEK = 14;</code>
     */
    const SEK = 14;
    /**
     * Generated from protobuf enum <code>ZAR = 15;</code>
     */
    const ZAR = 15;

    private static $valueToName = [
        self::NOCURRENCY => 'NOCURRENCY',
        self::GBP => 'GBP',
        self::EUR => 'EUR',
        self::USD => 'USD',
        self::AMD => 'AMD',
        self::BZD => 'BZD',
        self::CAD => 'CAD',
        self::CHF => 'CHF',
        self::CNY => 'CNY',
        self::IDR => 'IDR',
        self::ILS => 'ILS',
        self::INR => 'INR',
        self::PKR => 'PKR',
        self::PLN => 'PLN',
        self::SEK => 'SEK',
        self::ZAR => 'ZAR',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

