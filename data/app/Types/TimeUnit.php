<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zipcube/assets.proto

namespace App\Types;

use UnexpectedValueException;

/**
 * Protobuf type <code>zipcube.TimeUnit</code>
 */
class TimeUnit
{
    /**
     * Generated from protobuf enum <code>NOTIMEUNIT = 0;</code>
     */
    const NOTIMEUNIT = 0;
    /**
     * Generated from protobuf enum <code>PERIOD = 1;</code>
     */
    const PERIOD = 1;
    /**
     * Generated from protobuf enum <code>YEAR = 2;</code>
     */
    const YEAR = 2;
    /**
     * Generated from protobuf enum <code>MONTH = 3;</code>
     */
    const MONTH = 3;
    /**
     * Generated from protobuf enum <code>WEEK = 4;</code>
     */
    const WEEK = 4;
    /**
     * Generated from protobuf enum <code>DAY = 5;</code>
     */
    const DAY = 5;
    /**
     * Generated from protobuf enum <code>SPAN = 6;</code>
     */
    const SPAN = 6;
    /**
     * Generated from protobuf enum <code>TOSPANEND = 7;</code>
     */
    const TOSPANEND = 7;
    /**
     * Generated from protobuf enum <code>HOUR = 8;</code>
     */
    const HOUR = 8;

    private static $valueToName = [
        self::NOTIMEUNIT => 'NOTIMEUNIT',
        self::PERIOD => 'PERIOD',
        self::YEAR => 'YEAR',
        self::MONTH => 'MONTH',
        self::WEEK => 'WEEK',
        self::DAY => 'DAY',
        self::SPAN => 'SPAN',
        self::TOSPANEND => 'TOSPANEND',
        self::HOUR => 'HOUR',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

